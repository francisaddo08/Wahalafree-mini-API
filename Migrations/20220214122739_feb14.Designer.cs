// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WahalafreeAPI.data;

namespace WahalafreeAPI.Migrations
{
    [DbContext(typeof(WahalaFreeDb))]
    [Migration("20220214122739_feb14")]
    partial class feb14
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WahalafreeAPI.Entities.Category", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Delivery", b =>
                {
                    b.Property<int>("deliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("belowFreeDeliveryCost")
                        .HasColumnType("float");

                    b.HasKey("deliveryId");

                    b.ToTable("deliveries");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.DeliveryCost", b =>
                {
                    b.Property<int>("deliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("belowFreeDeliveryCost")
                        .HasColumnType("float");

                    b.HasKey("deliveryId");

                    b.ToTable("deliveryCosts");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Occasion", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("promoted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("occasions");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Product", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("justLanded")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("stockLevel")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ProductID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("productCategories");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.ProductOccasion", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OccasionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ProductID", "OccasionID");

                    b.HasIndex("OccasionID");

                    b.ToTable("productOccasions");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.ProductRecicpe", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecipeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ProductID", "RecipeID");

                    b.HasIndex("RecipeID");

                    b.ToTable("productRecicpes");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Recipe", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("desDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ingredientcount")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("promoted")
                        .HasColumnType("bit");

                    b.Property<string>("recipeDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subregion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("recipes");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.RecipeDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipeid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("recipeid");

                    b.ToTable("recipeDetails");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.RecipeOccasion", b =>
                {
                    b.Property<string>("RecipeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OccasionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("RecipeID", "OccasionID");

                    b.HasIndex("OccasionID");

                    b.ToTable("recipeOccasions");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.ProductCategory", b =>
                {
                    b.HasOne("WahalafreeAPI.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WahalafreeAPI.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.ProductOccasion", b =>
                {
                    b.HasOne("WahalafreeAPI.Entities.Occasion", "Occasion")
                        .WithMany("ProductOccasions")
                        .HasForeignKey("OccasionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WahalafreeAPI.Entities.Product", "Product")
                        .WithMany("ProductOccasions")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Occasion");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.ProductRecicpe", b =>
                {
                    b.HasOne("WahalafreeAPI.Entities.Product", "Product")
                        .WithMany("ProductRecicpes")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WahalafreeAPI.Entities.Recipe", "Recipe")
                        .WithMany("ProductRecicpes")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.RecipeDetail", b =>
                {
                    b.HasOne("WahalafreeAPI.Entities.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("recipeid");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.RecipeOccasion", b =>
                {
                    b.HasOne("WahalafreeAPI.Entities.Occasion", "Occasion")
                        .WithMany("RecipeOccasions")
                        .HasForeignKey("OccasionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WahalafreeAPI.Entities.Recipe", "Recipe")
                        .WithMany("RecipeOccasions")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Occasion");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Occasion", b =>
                {
                    b.Navigation("ProductOccasions");

                    b.Navigation("RecipeOccasions");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductOccasions");

                    b.Navigation("ProductRecicpes");
                });

            modelBuilder.Entity("WahalafreeAPI.Entities.Recipe", b =>
                {
                    b.Navigation("ProductRecicpes");

                    b.Navigation("RecipeOccasions");
                });
#pragma warning restore 612, 618
        }
    }
}
